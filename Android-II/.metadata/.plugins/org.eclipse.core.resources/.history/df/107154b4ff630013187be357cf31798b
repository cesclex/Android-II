package com.udb.modulo2.clase38;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.json.JSONArray;
import org.json.JSONObject;

import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Activity;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class MainActivity extends Activity {
	ArrayAdapter<String> elements;
	ListView listView;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		elements = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1);
        listView = (ListView) findViewById(R.id.listView1);
        listView.setAdapter(elements);
        
        new RestTask().execute();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	public void showDetail(View view){
		Intent intent = new Intent(this,DetailActivity.class);
		startActivityForResult(intent, 100);
	}
@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		elements.clear();//limpia los elementos de la lista
		new RestTask().execute();//carga de nuevo los elementos de la lista.
		
	}
private class RestTask extends AsyncTask<Void, Void, String> {
        

        protected void onPostExecute(String string) {
        	String readFeed = string;
            try {
            	Log.d(MainActivity.class.toString(), "R:"+readFeed);
            	JSONArray jsonArray =  new JSONArray(readFeed);
                Log.i(MainActivity.class.getName(), "Numero de Entradas " + jsonArray.length());
                for (int i = 0; i < jsonArray.length(); i++) {
                    JSONObject jsonObject = jsonArray.getJSONObject(i);
                    elements.add("Code: "+jsonObject.getString("discountCode")+" / rate: "+jsonObject.getString("rate"));
                    Log.i(MainActivity.class.getName(), jsonObject.getString("discountCode"));
                }

            } catch (Exception e) {
              e.printStackTrace();
            }
        }

		@Override
		protected String doInBackground(Void... params) {
			// TODO Auto-generated method stub		
			return readFeed();
		}
        
	    public String readFeed() {
	        StringBuilder builder = new StringBuilder();
	        HttpClient client = new DefaultHttpClient();
	        HttpGet httpGet = new HttpGet("http://192.168.1.105:8080/RestAndroid/webresources/com.udb.modulo2.entities.discountcode");
	        try {
	          HttpResponse response = client.execute(httpGet);
	          StatusLine statusLine = response.getStatusLine();
	          int statusCode = statusLine.getStatusCode();
	          if (statusCode == 200) {
	            HttpEntity entity = response.getEntity();
	            InputStream content = entity.getContent();
	            BufferedReader reader = new BufferedReader(new InputStreamReader(content));
	            String line;
	            while ((line = reader.readLine()) != null) {
	              builder.append(line);
	            }
	          } else {
	            Log.e(MainActivity.class.toString(), "Failed to download file");
	          }
	        } catch (ClientProtocolException e) {
	          e.printStackTrace();
	        } catch (IOException e) {
	          e.printStackTrace();
	        }
	        return builder.toString();
	      }
    }

}
